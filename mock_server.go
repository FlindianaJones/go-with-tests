// Code generated by MockGen. DO NOT EDIT.
// Source: server.go

// Package mock_main is a generated GoMock package.
package main

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockPlayerStore is a mock of PlayerStore interface
type MockPlayerStore struct {
	ctrl     *gomock.Controller
	recorder *MockPlayerStoreMockRecorder
}

// MockPlayerStoreMockRecorder is the mock recorder for MockPlayerStore
type MockPlayerStoreMockRecorder struct {
	mock *MockPlayerStore
}

// NewMockPlayerStore creates a new mock instance
func NewMockPlayerStore(ctrl *gomock.Controller) *MockPlayerStore {
	mock := &MockPlayerStore{ctrl: ctrl}
	mock.recorder = &MockPlayerStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPlayerStore) EXPECT() *MockPlayerStoreMockRecorder {
	return m.recorder
}

// GetPlayerScore mocks base method
func (m *MockPlayerStore) GetPlayerScore(name string) int {
	ret := m.ctrl.Call(m, "GetPlayerScore", name)
	ret0, _ := ret[0].(int)
	return ret0
}

// GetPlayerScore indicates an expected call of GetPlayerScore
func (mr *MockPlayerStoreMockRecorder) GetPlayerScore(name interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPlayerScore", reflect.TypeOf((*MockPlayerStore)(nil).GetPlayerScore), name)
}

// RecordWin mocks base method
func (m *MockPlayerStore) RecordWin(name string) {
	m.ctrl.Call(m, "RecordWin", name)
}

// RecordWin indicates an expected call of RecordWin
func (mr *MockPlayerStoreMockRecorder) RecordWin(name interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RecordWin", reflect.TypeOf((*MockPlayerStore)(nil).RecordWin), name)
}

// GetLeague mocks base method
func (m *MockPlayerStore) GetLeague() []Player {
	ret := m.ctrl.Call(m, "GetLeague")
	ret0, _ := ret[0].([]Player)
	return ret0
}

// GetLeague indicates an expected call of GetLeague
func (mr *MockPlayerStoreMockRecorder) GetLeague() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLeague", reflect.TypeOf((*MockPlayerStore)(nil).GetLeague))
}
